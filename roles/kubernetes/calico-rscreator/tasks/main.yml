---

- set_fact:
    proxy_conf: "{{proxy_env if proxy_env is defined else '{\"http_proxy\": \"\", \"https_proxy\": \"\"}'}}"

#- name: Check to see if pip is already installed
#  command: "pip --version"
#  ignore_errors: True
#  register: pip_is_installed
#  changed_when: False
#
#- block:
#
#    - name: Download get-pip.py
#      get_url: url=https://bootstrap.pypa.io/get-pip.py  dest=/tmp
#
#    - name: Install pip
#      command: "python /tmp/get-pip.py"
#
#    - name: Delete get-pip.py
#      file: state=absent path=/tmp/get-pip.py
#
#  when: pip_is_installed.rc != 0
#  environment: "{{proxy_conf}}"

- name: pip3 present
  apt:
    name: "python3-pip"
    state: present
  environment: "{{proxy_conf}}"

- name: Install Openshift pip module
  pip:
    name: openshift
  environment: "{{proxy_conf}}"

- name: Calico rbac 1
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calico-rbac/01-calico-node.yaml') | from_yaml }}"

- name: Calico rbac 2
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calico-rbac/02-calico-node.yaml') | from_yaml }}"

- name: Calico 1
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calico/01-calico-config.yaml') | from_yaml }}"

- name: Calico 2
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calico/02-calico-typha.yaml') | from_yaml }}"

- name: Calico 3
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calico/03-calico-typha.yaml') | from_yaml }}"

- name: Calico nodes daemonsets templates
  include: templates/calico-node-tpl.yml destination={{remote_tmp}}/{{item}} nodename={{item}}
  loop: "{{ groups[group] }}"

- name: Calico nodes creation
  k8s_raw:
    state: present
    src: "/tmp/calico-rs-{{item}}"
  loop: "{{ groups[group] }}"

- name: Calico 4
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calico/04-felixconfigurations.crd.projectcalico.org.yaml') | from_yaml }}"

- name: Calico 5
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calico/05-bgppeers.crd.projectcalico.org.yaml') | from_yaml }}"

- name: Calico 6
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calico/06-bgpconfigurations.crd.projectcalico.org.yaml') | from_yaml }}"

- name: Calico 7
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calico/07-ippools.crd.projectcalico.org.yaml') | from_yaml }}"

- name: Calico 8
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calico/08-hostendpoints.crd.projectcalico.org.yaml') | from_yaml }}"

- name: Calico 9
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calico/09-clusterinformations.crd.projectcalico.org.yaml') | from_yaml }}"

- name: Calico 10
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calico/10-globalnetworkpolicies.crd.projectcalico.org.yaml') | from_yaml }}"

- name: Calico 11
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calico/11-globalnetworksets.crd.projectcalico.org.yaml') | from_yaml }}"

- name: Calico 12
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calico/12-networkpolicies.crd.projectcalico.org.yaml') | from_yaml }}"

- name: Calico 13
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calico/13-calico-node.yaml') | from_yaml }}"

- name: Calicoctl 1
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calicoctl/01-calicoctl.yaml') | from_yaml }}"

- name: Calicoctl 2
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calicoctl/02-calicoctl.yaml') | from_yaml }}"

- name: Calicoctl 3
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calicoctl/03-calicoctl.yaml') | from_yaml }}"

- name: Calicoctl 4
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'misc/k8s-defs/calicoctl/04-calicoctl.yaml') | from_yaml }}"

- name: Check calicoctl is running (LOOP)
  changed_when: False
  shell: "kubectl get pod -n kube-system calicoctl -o go-template --template='{{'{{'}}.status.phase{{'}}'}}' || true"
  register: cresult
  until: cresult.stdout.find("Running") != -1
  retries: 10
  delay: 10
